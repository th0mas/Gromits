plugins {
	id 'org.springframework.boot' version '2.3.4.RELEASE'//2.3.4
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'org.siouan.frontend-jdk11' version '4.0.1'
	id 'java'
}

group = 'com.oceangromits'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-web'
	implementation 'org.springframework.security:spring-security-messaging'
	//implementation group:'org.springframework.boot',name:'spring-boot-starter-security',version:'2.3.4.RELEASE'
	implementation group: 'javax.inject', name: 'javax.inject', version: '1'
	//implementation 'org.springframework.boot:spring-security-messaging'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}

bootRun {
	if (project.hasProperty('args')) {
		args project.args.split(',')
	}
}

frontend {
	nodeDistributionProvided = false
	nodeVersion = '14.15.0'
	nodeInstallDirectory = file("${projectDir}/node")

	installScript = 'install'
	assembleScript = 'run build'
	cleanScript = 'run clean'

	packageJsonDirectory = file("${projectDir}/frontend")
	verboseModeEnabled = false
}

task copyWebApp(type: Copy) {
	from 'frontend/build'
	into 'build/resources/main/static/.'
}

bootJar.dependsOn(copyWebApp)