[{"/Users/tomh/spe/GromitsRepo/firmware/frontend/src/index.js":"1","/Users/tomh/spe/GromitsRepo/firmware/frontend/src/reportWebVitals.js":"2","/Users/tomh/spe/GromitsRepo/firmware/frontend/src/components/Root/index.js":"3","/Users/tomh/spe/GromitsRepo/firmware/frontend/src/components/SmartData/index.js":"4","/Users/tomh/spe/GromitsRepo/firmware/frontend/src/components/Dash/index.js":"5","/Users/tomh/spe/GromitsRepo/firmware/frontend/src/components/Stream/index.js":"6","/Users/tomh/spe/GromitsRepo/firmware/frontend/src/components/Auth/index.js":"7","/Users/tomh/spe/GromitsRepo/firmware/frontend/src/components/TokenProvider/index.js":"8","/Users/tomh/spe/GromitsRepo/firmware/frontend/src/components/SignalProvider/index.js":"9","/Users/tomh/spe/GromitsRepo/firmware/frontend/src/components/Dash/reducer.js":"10","/Users/tomh/spe/GromitsRepo/firmware/frontend/src/components/Auth/login.js":"11","/Users/tomh/spe/GromitsRepo/firmware/frontend/src/components/Dash/ClientInfo.js":"12","/Users/tomh/spe/GromitsRepo/firmware/frontend/src/components/Auth/SetupServer.js":"13","/Users/tomh/spe/GromitsRepo/firmware/frontend/src/components/InfoBox/SetupPromptBox.js":"14","/Users/tomh/spe/GromitsRepo/firmware/frontend/src/lib/tokenUtils.js":"15","/Users/tomh/spe/GromitsRepo/firmware/frontend/src/services/token.js":"16","/Users/tomh/spe/GromitsRepo/firmware/frontend/src/services/api.js":"17","/Users/tomh/spe/GromitsRepo/firmware/frontend/src/components/Auth/UserAndPass.js":"18","/Users/tomh/spe/GromitsRepo/firmware/frontend/src/services/url.js":"19","/Users/tomh/spe/GromitsRepo/firmware/frontend/src/components/InfoBox/index.js":"20","/Users/tomh/spe/GromitsRepo/firmware/frontend/src/contexts/index.js":"21","/Users/tomh/spe/GromitsRepo/firmware/frontend/src/components/InfoHolder/index.js":"22","/Users/tomh/spe/GromitsRepo/firmware/frontend/src/lib/stream/index.js":"23","/Users/tomh/spe/GromitsRepo/firmware/frontend/src/lib/stream/streamHook.js":"24","/Users/tomh/spe/GromitsRepo/firmware/frontend/src/lib/stream/events.js":"25","/Users/tomh/spe/GromitsRepo/firmware/frontend/src/lib/stream/reducer.js":"26","/Users/tomh/spe/GromitsRepo/firmware/frontend/src/lib/stream/RTCStream.ts":"27","/Users/tomh/spe/GromitsRepo/firmware/frontend/src/lib/signal.ts":"28","/Users/tomh/spe/GromitsRepo/firmware/frontend/src/lib/stream/P2PStream.ts":"29","/Users/tomh/spe/GromitsRepo/firmware/frontend/src/components/Dash/StreamMonitor.js":"30"},{"size":520,"mtime":1618502422161,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":1604425580111,"results":"33","hashOfConfig":"32"},{"size":920,"mtime":1619706453076,"results":"34","hashOfConfig":"32"},{"size":1377,"mtime":1618502422161,"results":"35","hashOfConfig":"32"},{"size":2263,"mtime":1619728656838,"results":"36","hashOfConfig":"32"},{"size":1691,"mtime":1619731921706,"results":"37","hashOfConfig":"32"},{"size":824,"mtime":1619188223074,"results":"38","hashOfConfig":"32"},{"size":698,"mtime":1619373833842,"results":"39","hashOfConfig":"32"},{"size":1283,"mtime":1619705329132,"results":"40","hashOfConfig":"32"},{"size":451,"mtime":1619728975461,"results":"41","hashOfConfig":"32"},{"size":1193,"mtime":1618582861486,"results":"42","hashOfConfig":"32"},{"size":1989,"mtime":1619728623013,"results":"43","hashOfConfig":"32"},{"size":1094,"mtime":1618580921526,"results":"44","hashOfConfig":"32"},{"size":515,"mtime":1618580921552,"results":"45","hashOfConfig":"32"},{"size":477,"mtime":1619369049468,"results":"46","hashOfConfig":"32"},{"size":600,"mtime":1619373814245,"results":"47","hashOfConfig":"32"},{"size":1842,"mtime":1619189258893,"results":"48","hashOfConfig":"32"},{"size":912,"mtime":1618580921547,"results":"49","hashOfConfig":"32"},{"size":125,"mtime":1618222213449,"results":"50","hashOfConfig":"32"},{"size":389,"mtime":1618680338828,"results":"51","hashOfConfig":"32"},{"size":127,"mtime":1618580921558,"results":"52","hashOfConfig":"32"},{"size":701,"mtime":1618580921553,"results":"53","hashOfConfig":"32"},{"size":159,"mtime":1614281615144,"results":"54","hashOfConfig":"32"},{"size":1776,"mtime":1619734209511,"results":"55","hashOfConfig":"32"},{"size":405,"mtime":1614281615144,"results":"56","hashOfConfig":"32"},{"size":1090,"mtime":1619731804223,"results":"57","hashOfConfig":"32"},{"size":3488,"mtime":1619733409394,"results":"58","hashOfConfig":"32"},{"size":5340,"mtime":1619706679752,"results":"59","hashOfConfig":"32"},{"size":5727,"mtime":1619734947789,"results":"60","hashOfConfig":"32"},{"size":1223,"mtime":1619735099538,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"5ymkiq",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tomh/spe/GromitsRepo/firmware/frontend/src/index.js",[],["126","127"],"/Users/tomh/spe/GromitsRepo/firmware/frontend/src/reportWebVitals.js",[],"/Users/tomh/spe/GromitsRepo/firmware/frontend/src/components/Root/index.js",["128","129"],"import React from 'react'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\"\n\nimport Stream from '../Stream'\nimport SignalProvider from \"../SignalProvider\";\nimport SmartData from '../SmartData/index.js'\nimport Auth from \"../Auth\";\nimport TokenProvider from \"../TokenProvider\";\nimport Dash from '../Dash';\n\nconst signalServerPath = process.env.REACT_APP_SIGNAL_URL  || \"http://localhost:8080\"\nconst apiKey = process.env.REACT_APP_OPENWEATHER_API_KEY\n\nconst Root = () => {\n  return <>\n      <TokenProvider>\n      <Router>\n      <Switch>\n        <Route path=\"/auth\"><Auth /></Route>\n        <SignalProvider url={signalServerPath + \"/signaller\"}>\n          <Route path=\"/dash\"><Dash /></Route>\n          <Route exact path=\"/\"><Stream /></Route>\n        </SignalProvider>\n      </Switch>\n      </Router>\n      </TokenProvider>\n    {/* <SmartData api={apiKey}/> */}\n  </>\n}\n\nexport default Root\n","/Users/tomh/spe/GromitsRepo/firmware/frontend/src/components/SmartData/index.js",[],"/Users/tomh/spe/GromitsRepo/firmware/frontend/src/components/Dash/index.js",["130"],"/Users/tomh/spe/GromitsRepo/firmware/frontend/src/components/Stream/index.js",["131"],"/Users/tomh/spe/GromitsRepo/firmware/frontend/src/components/Auth/index.js",[],"/Users/tomh/spe/GromitsRepo/firmware/frontend/src/components/TokenProvider/index.js",[],"/Users/tomh/spe/GromitsRepo/firmware/frontend/src/components/SignalProvider/index.js",[],"/Users/tomh/spe/GromitsRepo/firmware/frontend/src/components/Dash/reducer.js",[],"/Users/tomh/spe/GromitsRepo/firmware/frontend/src/components/Auth/login.js",[],"/Users/tomh/spe/GromitsRepo/firmware/frontend/src/components/Dash/ClientInfo.js",[],"/Users/tomh/spe/GromitsRepo/firmware/frontend/src/components/Auth/SetupServer.js",[],"/Users/tomh/spe/GromitsRepo/firmware/frontend/src/components/InfoBox/SetupPromptBox.js",[],"/Users/tomh/spe/GromitsRepo/firmware/frontend/src/lib/tokenUtils.js",[],"/Users/tomh/spe/GromitsRepo/firmware/frontend/src/services/token.js",[],"/Users/tomh/spe/GromitsRepo/firmware/frontend/src/services/api.js",[],"/Users/tomh/spe/GromitsRepo/firmware/frontend/src/components/Auth/UserAndPass.js",[],"/Users/tomh/spe/GromitsRepo/firmware/frontend/src/services/url.js",[],"/Users/tomh/spe/GromitsRepo/firmware/frontend/src/components/InfoBox/index.js",[],"/Users/tomh/spe/GromitsRepo/firmware/frontend/src/contexts/index.js",[],"/Users/tomh/spe/GromitsRepo/firmware/frontend/src/components/InfoHolder/index.js",[],"/Users/tomh/spe/GromitsRepo/firmware/frontend/src/lib/stream/index.js",[],"/Users/tomh/spe/GromitsRepo/firmware/frontend/src/lib/stream/streamHook.js",[],"/Users/tomh/spe/GromitsRepo/firmware/frontend/src/lib/stream/events.js",[],"/Users/tomh/spe/GromitsRepo/firmware/frontend/src/lib/stream/reducer.js",[],"/Users/tomh/spe/GromitsRepo/firmware/frontend/src/lib/stream/RTCStream.ts",[],"/Users/tomh/spe/GromitsRepo/firmware/frontend/src/lib/signal.ts",["132","133","134"],"/*\nSignaller is an abstraction over communicating with the signalling server itself.\n\nOther parts of the application should only need to use the `send(obj)` method.\n\n */\n\nimport SockJS from 'sockjs-client'\nimport {Client, IFrame} from \"@stomp/stompjs\";\nimport { clientId, hasRole } from './tokenUtils';\nimport { Signal } from './stream/P2PStream'\n\n\nexport const DEVICE_JOIN = 'DEVICE_JOIN'\nexport const DEVICE_LEAVE = 'DEVICE_LEAVE'\nexport const VIDEO_OFFER = 'VIDEO_OFFER'\nexport const VIDEO_ANSWER = 'VIDEO_ANSWER'\nexport const NEW_ICE_CANDIDATE = 'NEW_ICE_CANDIDATE'\n\nexport enum Channel { \n  Private,\n  User\n} \n\nclass Signaller {\n  // Define stubs for vars to be set later.\n  stompClient\n  errCallback\n  authErrCallback: () => void\n  setTokenCallback: (t: string) => void;\n  onConnect?: () => void \n  token?: string\n  clientId?: string\n\n  callbacks: Array<(a: any) => void> = []\n  userCallbacks: Array<(a: any) => void> = []\n\n\n  // Creates our socket and stompJs clients\n  constructor(url: string, errCallback: (e: string) => void, authErrCallback: () => void, setTokenCallback: (t: string) => void,\n    onConnect: () => void | undefined\n  ) {\n    this.errCallback = errCallback\n    this.authErrCallback = authErrCallback\n    this.setTokenCallback = setTokenCallback\n    this.onConnect = onConnect\n      \n    this.stompClient = new Client()\n    // @ts-ignore\n    this.stompClient.webSocketFactory = () => new SockJS(url)\n  }\n\n  connect() {\n    console.log(\"Attempting connect....\")\n\n    // Set our header conditionally if we have a token or not\n    this.stompClient.connectHeaders = this.token ? {token: this.token} : {}\n\n    // Register our callbacks\n    this.stompClient.onConnect = () => this.handleConnect()\n    this.stompClient.onStompError = err => this.handle(err)\n    this.stompClient.onWebSocketClose = (err) => this.handleClose(err)\n    this.stompClient.onWebSocketError = err => this.handle(\"WS: \" + err)\n\n    // Cleanly disconnect from old socket\n    // We need this as we sometimes call `connect` on an already open socket with different tokens/roles.\n    // This helps our server recognise our new roles and keeps our state management cleaner.\n    this.stompClient.activate()\n\n  }\n\n  disconnect() {\n    return this.stompClient.deactivate()\n  }\n\n  setToken(token: string) {\n    this.token = token\n    this.clientId = clientId(token)\n  }\n\n  // Abstract away our error handler a bit\n  handle(frame: IFrame | String) {\n    this.errCallback(`Signal: ${frame}`)\n\n    if (this.isIFrame(frame)) {\n      if (frame.headers.message.includes(\"Access is denied\") || frame.headers.message.includes(\"SignatureException\")) {\n        console.log(\"attempting auth callback...\")\n        this.authErrCallback()\n      }\n    }\n  }\n\n  // Allow other classes to register callbacks\n  registerRTCCallback(callback: (a: any) => void, channel?: Channel) {\n    if (channel === Channel.Private || !channel)  {\n      this.callbacks.push(callback)\n    } else if (channel === Channel.User) {\n      this.userCallbacks.push(callback)\n    }\n  }\n\n  // Remove our callbacks - perf optimisation when using Hooks\n  removeRTCCallback(callback: (a: any) => void) {\n    this.callbacks.filter(item => item != callback)\n    this.userCallbacks.filter(item => item != callback)\n  }\n\n  // internal method to handle our initial connection and subscribe to needed channels\n  handleConnect() {\n    // Manually clear any old errors\n    this.errCallback('')\n\n    this.registerSubscriptions()\n\n    // let payload = {\n    //   type: DEVICE_JOIN\n    // }\n\n    // this.stompClient.publish({\n    //   destination: \"/webrtc/join\",\n    //   body: JSON.stringify(payload)\n    // })\n\n    if (this.onConnect) {\n      this.onConnect()\n    }\n  }\n\n  registerSubscriptions() {\n    this.stompClient.subscribe('/msg/public', (payload) => this.handleSignal(payload))\n    this.stompClient.subscribe('/user/queue/message', (payload) => this.handleDirectMessage(payload))\n\n    // Work around for https://stackoverflow.com/questions/67108426/\n    if (hasRole(this.token, \"ROLE_VIDEO\")) {\n      this.stompClient.subscribe('/msg/private', (payload) => this.handleSignal(payload))\n    }\n  }\n\n  // Render a nice error for closed connections\n  handleClose(err: CloseEvent) {\n    if (err.code === 1002) {\n      this.handle(\"Connection to server lost\")\n      \n    } else {\n      this.handle(err.reason)\n    }\n  }\n\n  // Relay our signals to all listening clients.\n  //  - might not be needed in the end but worth buulding\n  //    out now\n  handleSignal(signal: any) {\n    let content = JSON.parse(signal.body)\n    if (content.sender === this.clientId) {\n      console.log(\"discarding own message\")\n      return\n    }\n\n    this.callbacks.forEach((callback) => callback(content))\n  }\n\n  handleDirectMessage(signal: any) {\n    let content = JSON.parse(signal.body)\n\n    if (content.type === \"TOKEN\") {\n      console.log(\"Received new token, trying to set!\")\n      this.setTokenCallback(content.token)\n      return\n    }\n\n\n    this.userCallbacks.forEach((callback) => callback(content))\n  }\n\n  send(obj: Object, to?: string) {\n    let payload = {...obj, to}\n    this.stompClient.publish({\n      destination: \"/webrtc/signal\",\n      body: JSON.stringify(payload),\n    })\n\n  }\n\n  private isIFrame(object: any): object is IFrame {\n    return (object as IFrame).headers !== undefined\n  }\n\n\n}\n\nexport {Signaller}\n",["135","136"],"/Users/tomh/spe/GromitsRepo/firmware/frontend/src/lib/stream/P2PStream.ts",[],"/Users/tomh/spe/GromitsRepo/firmware/frontend/src/components/Dash/StreamMonitor.js",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":11,"column":8,"nodeType":"143","messageId":"144","endLine":11,"endColumn":17},{"ruleId":"141","severity":1,"message":"145","line":17,"column":7,"nodeType":"143","messageId":"144","endLine":17,"endColumn":13},{"ruleId":"141","severity":1,"message":"146","line":1,"column":51,"nodeType":"143","messageId":"144","endLine":1,"endColumn":59},{"ruleId":"141","severity":1,"message":"147","line":1,"column":57,"nodeType":"143","messageId":"144","endLine":1,"endColumn":68},{"ruleId":"148","severity":1,"message":"149","line":11,"column":10,"nodeType":"143","messageId":"144","endLine":11,"endColumn":16},{"ruleId":"150","severity":1,"message":"151","line":104,"column":40,"nodeType":"152","messageId":"153","endLine":104,"endColumn":42},{"ruleId":"150","severity":1,"message":"151","line":105,"column":44,"nodeType":"152","messageId":"153","endLine":105,"endColumn":46},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"no-unused-vars","'SmartData' is defined but never used.","Identifier","unusedVar","'apiKey' is assigned a value but never used.","'useState' is defined but never used.","'useCallback' is defined but never used.","@typescript-eslint/no-unused-vars","'Signal' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]